name: Publish to npm

on:
  push:
    branches:
      - main

jobs:
  publish:
    name: Build & Publish
    runs-on: ubuntu-latest

    permissions:
      contents: read
      id-token: write # For future-proofing if switching to OIDC
      actions: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js v22
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          registry-url: 'https://registry.npmjs.org'

      - name: Cache node_modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('package-lock.json') }}

      - name: Install dependencies
        run: npm ci

      - name: Build the package
        run: npm run build

      - name: Check if version changed
        id: version-check
        run: |
          git fetch --tags
          CURRENT_VERSION=$(jq -r .version package.json)
          echo "Current version: $CURRENT_VERSION"
          if git tag | grep -q "v$CURRENT_VERSION"; then
            echo "Version $CURRENT_VERSION already published. Skipping."
            echo "publish=false" >> $GITHUB_OUTPUT
          else
            echo "New version detected. Proceeding with publish."
            echo "publish=true" >> $GITHUB_OUTPUT
          fi

      - name: Publish to npm
        if: steps.version-check.outputs.publish == 'true'
        run: npm publish
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Git tag
        if: steps.version-check.outputs.publish == 'true'
        run: |
          VERSION=$(jq -r .version package.json)
          git config user.name "github-actions"
          git config user.email "github-actions@github.com"
          git tag "v$VERSION"
          git push origin "v$VERSION"
